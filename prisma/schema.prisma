// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    incomes       Income[]
    expenses      Expense[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Expense {
    id        String          @id @default(cuid())
    createdAt DateTime        @default(now())
    user      User?           @relation(fields: [userId], references: [id])
    userId    String?
    title     String
    order     ExpenseOreder[]
}

model ExpenseOreder {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    value     Int
    category  String
    comment   String
    expense   Expense? @relation(fields: [expenseId], references: [id])
    expenseId String?
}

model OrderIncome {
    id        String   @id @default(cuid())
    income    Income?  @relation(fields: [incomeId], references: [id])
    incomeId  String
    createdAt DateTime @default(now())
    value     Int
    category  String
    comment   String?
}

model Income {
    id     String        @id @default(cuid())
    userId String
    title  String
    order  OrderIncome[]
    User   User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}
